@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin content {
  box-shadow: 0px 0px 40px -25px;
  border-radius: 10px;
  padding: 50px 50px 30px;
  margin-bottom: 15px;
}

@mixin min-width($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}
@mixin max-width($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin underline {
  width: fit-content;
  position: relative;
  &::after {
    content: "";
    position: absolute;
    width: 8px;
    height: 80%;
    background: $gradient;
    top: 2px;
    left: -12px;
    border-radius: 2px;
  }
}

@mixin on-circle($item-count, $circle-size, $item-size) {
  position: relative;
  width: $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;

    height: $item-size;
    width: auto;
    margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg)
          translate($circle-size / 2)
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}
